image: docker:latest
services:
- docker:dind

stages:
- test
- build
- production
- publish

before_script:
- apk update && apk upgrade
- apk add --update bash curl git gettext openssh python python-dev py-pip py-paramiko build-base openssl wget jq
- pip install docker-compose

- docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
- docker network create bicing-api-network

- ENVIRONMENT=$(echo $CI_BUILD_REF_NAME | awk -F'/' '{print $1}')
- PRODUCTION_TAG=$(echo $CI_BUILD_REF_NAME | awk -F'/' '{print $2}')
- export PRODUCTION_IMAGE="$CI_REGISTRY_IMAGE:$PRODUCTION_TAG"

after_script:
- docker logout registry.gitlab.com

.quality_assurance_script_template: &quality_assurance_script
  script:
    - cp .env.dist .env
    - docker-compose -f docker-compose.yml -f ./docker/docker-compose.ci.yml up -d
    - docker-compose exec -T php composer install --dev --prefer-dist --no-scripts --no-progress --no-suggest
    - docker-compose exec -T php bin/phpstan analyse src --level max
    - docker-compose exec -T php bin/phpcs --standard=PSR2 src
    - docker-compose exec -T php bin/phpspec run
    - docker-compose run --rm php bin/console do:mi:mi -n --env=test
    - docker-compose exec -T php bin/simple-phpunit --coverage-text --colors=never
    - docker-compose exec -T php bin/behat
    - docker-compose down -v --remove-orphans

.build_script_template: &build_script
  script:
    - cp .env.dist .env
    - docker-compose -f docker-compose.yml -f ./docker/docker-compose.ci.yml up -d
    - docker-compose exec -T php composer install --dev --prefer-dist --no-scripts --no-progress --no-suggest
    - docker-compose exec -T php bin/phpstan analyse src --level max
    - docker-compose exec -T php bin/phpcs --standard=PSR2 src
    - docker-compose exec -T php bin/phpspec run
    - docker-compose run --rm php bin/console do:mi:mi -n --env=test
    - docker-compose exec -T php bin/simple-phpunit --coverage-text --colors=never
    - docker-compose exec -T php bin/behat
    - docker-compose exec -T php rm -rf var/cache/* var/log/*
    - docker-compose down -v --remove-orphans
    - docker build --target bicing_api_php -t $PRODUCTION_IMAGE .
    - docker push $PRODUCTION_IMAGE

.production_script_template: &production_script
  script:
  - chmod +x ./docker/production/deploy.sh
  - ./docker/production/deploy.sh

.generate_badges_template: &generate_badges_script
  script:
  - chmod +x ./documentation/badges/upload.sh
  - ./documentation/badges/upload.sh

test:
  <<: *quality_assurance_script
  environment: test
  only:
  - /^[F|f]eature\/.*$/
  stage: test

build:
  <<: *build_script
  environment: build
  only:
  - /^[R|r]elease\/.*$/
  - /^[H|h]otfix\/.*$/
  stage: build

production:
  <<: *production_script
  environment: production
  only:
  - /^[R|r]elease\/.*$/
  - /^[H|h]otfix\/.*$/
  stage: production
  when: manual

publish:
  <<: *generate_badges_script
  environment: publish
  stage: publish
  only:
  - master
